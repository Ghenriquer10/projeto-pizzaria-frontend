[{"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\category\\index.tsx":"1","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\dashboard\\index.tsx":"2","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\index.tsx":"3","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\product\\index.tsx":"4","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\signup\\index.tsx":"5","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\_app.tsx":"6","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\_document.tsx":"7","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\Header\\index.tsx":"8","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\ModalOrder\\index.tsx":"9","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\ui\\Button\\index.tsx":"10","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\ui\\Input\\index.tsx":"11"},{"size":2095,"mtime":1658780073421,"results":"12","hashOfConfig":"13"},{"size":4386,"mtime":1659392242909,"results":"14","hashOfConfig":"13"},{"size":2130,"mtime":1660078843666,"results":"15","hashOfConfig":"13"},{"size":5467,"mtime":1658786016404,"results":"16","hashOfConfig":"13"},{"size":2891,"mtime":1658524637744,"results":"17","hashOfConfig":"13"},{"size":473,"mtime":1658522411701,"results":"18","hashOfConfig":"13"},{"size":382,"mtime":1658177668296,"results":"19","hashOfConfig":"13"},{"size":1140,"mtime":1659392472502,"results":"20","hashOfConfig":"13"},{"size":2135,"mtime":1659391451147,"results":"21","hashOfConfig":"13"},{"size":707,"mtime":1658183881207,"results":"22","hashOfConfig":"13"},{"size":538,"mtime":1658180566208,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xvrm7m",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\category\\index.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\dashboard\\index.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\index.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\product\\index.tsx",["59"],[],"import React, { FormEvent, useState, ChangeEvent } from 'react'\r\nimport Head from \"next/head\";\r\nimport { Header } from \"../../components/Header\";\r\nimport { canSSRAuth } from \"../../utils/canSSRAuth\";\r\nimport styles from './product.module.scss'\r\nimport { FiUpload } from 'react-icons/fi'\r\nimport { setupApiClient } from '../../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\ntype ItemProps = {\r\n    id: string,\r\n    name: string\r\n}\r\n\r\ninterface CategoryProps {\r\n    categoryList: ItemProps[]\r\n}\r\n\r\nexport default function Product({ categoryList }: CategoryProps) {\r\n\r\n    console.log(categoryList)\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    // Tratando o envio de imagens\r\n    const [avatarUrl, setAvatarUrl] = useState('');\r\n    const [imageAvatar, setImageAvatar] = useState(null)\r\n\r\n    // Tratando a seleção de uma categoria\r\n    const [categories, setCategories] = useState(categoryList || [])\r\n    const [categorySelected, setCategorySelected] = useState(0)\r\n\r\n    function handleFile(e: ChangeEvent<HTMLInputElement>) {\r\n        if (!e.target.files) {\r\n            return\r\n        }\r\n\r\n        const image = e.target.files[0];\r\n\r\n        if (!image) {\r\n            return\r\n        }\r\n\r\n        if (image.type === 'image/jpeg' || image.type === 'image/png') {\r\n            setImageAvatar(image);\r\n            setAvatarUrl(URL.createObjectURL(e.target.files[0]))\r\n        }\r\n    }\r\n\r\n    function handleCategorySelected(event) {\r\n        //console.log('categoria selecionada', categories[event.target.value])\r\n        setCategorySelected(event.target.value)\r\n    }\r\n\r\n    async function handleProduct(event: FormEvent) {\r\n        event.preventDefault()\r\n        try {\r\n            const data = new FormData();\r\n\r\n            if (name === '' || price === '' || description === '' || imageAvatar === null) {\r\n                toast.warning('Preencha todos os campos!')\r\n                return;\r\n            }\r\n\r\n            data.append('name', name);\r\n            data.append('price', price);\r\n            data.append('description', description);\r\n            data.append('file', imageAvatar);\r\n            data.append('category_id', categories[categorySelected].id);\r\n\r\n            const apiClient = setupApiClient();\r\n\r\n            await apiClient.post('/product', data)\r\n            toast.success('Produto cadastrado com sucesso!')\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error('Erro ao cadastrar produto!')\r\n        }\r\n\r\n        setName('');\r\n        setPrice('');\r\n        setDescription('');\r\n        setImageAvatar(null);\r\n        setAvatarUrl('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>Novo produto - Pizzaria</title>\r\n            </Head>\r\n\r\n            <div>\r\n                <Header />\r\n\r\n                <main className={styles.container}>\r\n                    <h1>Cadastrar produto</h1>\r\n                    <form onSubmit={handleProduct} className={styles.form}>\r\n                        <label className={styles.labelAvatar}>\r\n                            <span>\r\n                                <FiUpload size={25} color={'#fff'} />\r\n                            </span>\r\n                            <input type={'file'} accept=\"image/png, image/jpeg\" onChange={handleFile} />\r\n                            {avatarUrl && (\r\n                                <img\r\n                                    className={styles.preview}\r\n                                    src={avatarUrl}\r\n                                    alt='Foto do produto'\r\n                                    width={250}\r\n                                    height={250}\r\n                                />\r\n                            )}\r\n                        </label>\r\n                        <select value={categorySelected} onChange={handleCategorySelected}>\r\n                            {categories.map((item, index) => {\r\n                                return (\r\n                                    <option key={item.id} value={index}>\r\n                                        {item.name}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                        <input\r\n                            placeholder='Nome do item'\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                        <input\r\n                            placeholder='Valor'\r\n                            value={price}\r\n                            onChange={e => setPrice(e.target.value)}\r\n                        />\r\n                        <input\r\n                            placeholder='Descrição'\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                        />\r\n                        <button className={styles.button} type='submit'>Cadastrar</button>\r\n                    </form>\r\n\r\n                </main>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps = canSSRAuth(async (ctx) => {\r\n    const apiClient = setupApiClient(ctx)\r\n\r\n    const response = await apiClient.get('/category')\r\n\r\n    return {\r\n        props: {\r\n            categoryList: response.data\r\n        }\r\n    }\r\n})","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\signup\\index.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\_app.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\pages\\_document.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\Header\\index.tsx",["60","61"],[],"import { useContext } from 'react'\r\nimport Link from 'next/link'\r\nimport styles from './header.module.scss'\r\nimport { FiLogOut } from 'react-icons/fi'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\n\r\nexport function Header() {\r\n    const { signOut } = useContext(AuthContext)\r\n    return (\r\n        <header className={styles.headerContainer}>\r\n            <div className={styles.headerContent}>\r\n                <Link href=\"/dashboard\">\r\n                    <img src='logo.svg' width={190} height={60} />\r\n                </Link>\r\n                <nav className={styles.navContent}>\r\n                    <Link href=\"/\">\r\n                        <a>Pedidos</a>\r\n                    </Link>\r\n\r\n                    <Link href=\"/category\">\r\n                        <a>Categoria</a>\r\n                    </Link>\r\n\r\n                    <Link href=\"/product\">\r\n                        <a>Novo produto</a>\r\n                    </Link>\r\n\r\n                    <button onClick={signOut}>\r\n                        <FiLogOut size={24} />\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}","C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\ModalOrder\\index.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\ui\\Button\\index.tsx",[],[],"C:\\react-projects\\curso-react-udemy\\pizzaria\\frontend\\src\\components\\ui\\Input\\index.tsx",[],[],{"ruleId":"62","severity":1,"message":"63","line":108,"column":33,"nodeType":"64","endLine":114,"endColumn":35},{"ruleId":"62","severity":1,"message":"63","line":13,"column":21,"nodeType":"64","endLine":13,"endColumn":67},{"ruleId":"65","severity":1,"message":"66","line":13,"column":21,"nodeType":"64","endLine":13,"endColumn":67},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]